/*
 * Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.plugint.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plugint.client.model.IntegrationApiModelsCommandsCartItem;
import com.plugint.client.model.IntegrationApiModelsCommandsCustomerJourney;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IntegrationApiModelsCommandsCreateOrder
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-24T06:53:25.443Z[GMT]")
public class IntegrationApiModelsCommandsCreateOrder {
  @SerializedName("customerJourney")
  private IntegrationApiModelsCommandsCustomerJourney customerJourney = null;

  @SerializedName("goodsDescription")
  private String goodsDescription = null;

  @SerializedName("purchasePrice")
  private Integer purchasePrice = null;

  @SerializedName("retailerOrderNo")
  private String retailerOrderNo = null;

  @SerializedName("cart")
  private List<IntegrationApiModelsCommandsCartItem> cart = null;

  public IntegrationApiModelsCommandsCreateOrder customerJourney(IntegrationApiModelsCommandsCustomerJourney customerJourney) {
    this.customerJourney = customerJourney;
    return this;
  }

   /**
   * Get customerJourney
   * @return customerJourney
  **/
  @Schema(required = true, description = "")
  public IntegrationApiModelsCommandsCustomerJourney getCustomerJourney() {
    return customerJourney;
  }

  public void setCustomerJourney(IntegrationApiModelsCommandsCustomerJourney customerJourney) {
    this.customerJourney = customerJourney;
  }

  public IntegrationApiModelsCommandsCreateOrder goodsDescription(String goodsDescription) {
    this.goodsDescription = goodsDescription;
    return this;
  }

   /**
   * Brief description of goods being purchased
   * @return goodsDescription
  **/
  @Schema(description = "Brief description of goods being purchased")
  public String getGoodsDescription() {
    return goodsDescription;
  }

  public void setGoodsDescription(String goodsDescription) {
    this.goodsDescription = goodsDescription;
  }

  public IntegrationApiModelsCommandsCreateOrder purchasePrice(Integer purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * Purchase price of the order  An integer number in the lowest denomination in the currency being used (e.g. supply 1034 to indicate $10.34)
   * @return purchasePrice
  **/
  @Schema(required = true, description = "Purchase price of the order  An integer number in the lowest denomination in the currency being used (e.g. supply 1034 to indicate $10.34)")
  public Integer getPurchasePrice() {
    return purchasePrice;
  }

  public void setPurchasePrice(Integer purchasePrice) {
    this.purchasePrice = purchasePrice;
  }

  public IntegrationApiModelsCommandsCreateOrder retailerOrderNo(String retailerOrderNo) {
    this.retailerOrderNo = retailerOrderNo;
    return this;
  }

   /**
   * A retailer reference (e.g. invoice) number for this order
   * @return retailerOrderNo
  **/
  @Schema(description = "A retailer reference (e.g. invoice) number for this order")
  public String getRetailerOrderNo() {
    return retailerOrderNo;
  }

  public void setRetailerOrderNo(String retailerOrderNo) {
    this.retailerOrderNo = retailerOrderNo;
  }

  public IntegrationApiModelsCommandsCreateOrder cart(List<IntegrationApiModelsCommandsCartItem> cart) {
    this.cart = cart;
    return this;
  }

  public IntegrationApiModelsCommandsCreateOrder addCartItem(IntegrationApiModelsCommandsCartItem cartItem) {
    if (this.cart == null) {
      this.cart = new ArrayList<IntegrationApiModelsCommandsCartItem>();
    }
    this.cart.add(cartItem);
    return this;
  }

   /**
   * An array of the items being purchased in the order
   * @return cart
  **/
  @Schema(description = "An array of the items being purchased in the order")
  public List<IntegrationApiModelsCommandsCartItem> getCart() {
    return cart;
  }

  public void setCart(List<IntegrationApiModelsCommandsCartItem> cart) {
    this.cart = cart;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationApiModelsCommandsCreateOrder integrationApiModelsCommandsCreateOrder = (IntegrationApiModelsCommandsCreateOrder) o;
    return Objects.equals(this.customerJourney, integrationApiModelsCommandsCreateOrder.customerJourney) &&
        Objects.equals(this.goodsDescription, integrationApiModelsCommandsCreateOrder.goodsDescription) &&
        Objects.equals(this.purchasePrice, integrationApiModelsCommandsCreateOrder.purchasePrice) &&
        Objects.equals(this.retailerOrderNo, integrationApiModelsCommandsCreateOrder.retailerOrderNo) &&
        Objects.equals(this.cart, integrationApiModelsCommandsCreateOrder.cart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerJourney, goodsDescription, purchasePrice, retailerOrderNo, cart);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationApiModelsCommandsCreateOrder {\n");
    
    sb.append("    customerJourney: ").append(toIndentedString(customerJourney)).append("\n");
    sb.append("    goodsDescription: ").append(toIndentedString(goodsDescription)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    retailerOrderNo: ").append(toIndentedString(retailerOrderNo)).append("\n");
    sb.append("    cart: ").append(toIndentedString(cart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
