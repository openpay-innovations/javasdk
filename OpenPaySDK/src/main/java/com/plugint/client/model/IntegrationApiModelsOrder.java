/*
 * Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.plugint.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plugint.client.model.IntegrationApiModelsNextAction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * IntegrationApiModelsOrder
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-24T06:53:25.443Z[GMT]")
public class IntegrationApiModelsOrder {
  @SerializedName("orderId")
  private String orderId = null;

  @SerializedName("blackListMatch")
  private Integer blackListMatch = null;

  @SerializedName("orderStatus")
  private String orderStatus = null;

  @SerializedName("planStatus")
  private String planStatus = null;

  @SerializedName("purchasePrice")
  private Integer purchasePrice = null;

  @SerializedName("retailerAmount")
  private Integer retailerAmount = null;

  @SerializedName("nextAction")
  private IntegrationApiModelsNextAction nextAction = null;

  public IntegrationApiModelsOrder orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The Openpay-generated ID of this order
   * @return orderId
  **/
  @Schema(description = "The Openpay-generated ID of this order")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public IntegrationApiModelsOrder blackListMatch(Integer blackListMatch) {
    this.blackListMatch = blackListMatch;
    return this;
  }

   /**
   * -1 &#x3D; Not enough information supplied to check BlackList  0 &#x3D; No match against black list database  1 &#x3D; One or more attributes supplied match a black list
   * @return blackListMatch
  **/
  @Schema(description = "-1 = Not enough information supplied to check BlackList  0 = No match against black list database  1 = One or more attributes supplied match a black list")
  public Integer getBlackListMatch() {
    return blackListMatch;
  }

  public void setBlackListMatch(Integer blackListMatch) {
    this.blackListMatch = blackListMatch;
  }

  public IntegrationApiModelsOrder orderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

   /**
   * The status the order is in
   * @return orderStatus
  **/
  @Schema(description = "The status the order is in")
  public String getOrderStatus() {
    return orderStatus;
  }

  public void setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
  }

  public IntegrationApiModelsOrder planStatus(String planStatus) {
    this.planStatus = planStatus;
    return this;
  }

   /**
   * The status the plan is in
   * @return planStatus
  **/
  @Schema(description = "The status the plan is in")
  public String getPlanStatus() {
    return planStatus;
  }

  public void setPlanStatus(String planStatus) {
    this.planStatus = planStatus;
  }

  public IntegrationApiModelsOrder purchasePrice(Integer purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * The price for the whole order  An integer number in the lowest denomination in the currency being used (e.g. 1034 indicates $10.34)
   * @return purchasePrice
  **/
  @Schema(description = "The price for the whole order  An integer number in the lowest denomination in the currency being used (e.g. 1034 indicates $10.34)")
  public Integer getPurchasePrice() {
    return purchasePrice;
  }

  public void setPurchasePrice(Integer purchasePrice) {
    this.purchasePrice = purchasePrice;
  }

  public IntegrationApiModelsOrder retailerAmount(Integer retailerAmount) {
    this.retailerAmount = retailerAmount;
    return this;
  }

   /**
   * The amount the retailer will get for the order  An integer number in the lowest denomination in the currency being used (e.g. 1034 indicates $10.34)
   * @return retailerAmount
  **/
  @Schema(description = "The amount the retailer will get for the order  An integer number in the lowest denomination in the currency being used (e.g. 1034 indicates $10.34)")
  public Integer getRetailerAmount() {
    return retailerAmount;
  }

  public void setRetailerAmount(Integer retailerAmount) {
    this.retailerAmount = retailerAmount;
  }

  public IntegrationApiModelsOrder nextAction(IntegrationApiModelsNextAction nextAction) {
    this.nextAction = nextAction;
    return this;
  }

   /**
   * Get nextAction
   * @return nextAction
  **/
  @Schema(description = "")
  public IntegrationApiModelsNextAction getNextAction() {
    return nextAction;
  }

  public void setNextAction(IntegrationApiModelsNextAction nextAction) {
    this.nextAction = nextAction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationApiModelsOrder integrationApiModelsOrder = (IntegrationApiModelsOrder) o;
    return Objects.equals(this.orderId, integrationApiModelsOrder.orderId) &&
        Objects.equals(this.blackListMatch, integrationApiModelsOrder.blackListMatch) &&
        Objects.equals(this.orderStatus, integrationApiModelsOrder.orderStatus) &&
        Objects.equals(this.planStatus, integrationApiModelsOrder.planStatus) &&
        Objects.equals(this.purchasePrice, integrationApiModelsOrder.purchasePrice) &&
        Objects.equals(this.retailerAmount, integrationApiModelsOrder.retailerAmount) &&
        Objects.equals(this.nextAction, integrationApiModelsOrder.nextAction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, blackListMatch, orderStatus, planStatus, purchasePrice, retailerAmount, nextAction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationApiModelsOrder {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    blackListMatch: ").append(toIndentedString(blackListMatch)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    planStatus: ").append(toIndentedString(planStatus)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    retailerAmount: ").append(toIndentedString(retailerAmount)).append("\n");
    sb.append("    nextAction: ").append(toIndentedString(nextAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
